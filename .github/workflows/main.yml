name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
jobs:
#  github-action-android:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Setup JDK
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: '11'
#      - name: Flutter Action
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '2.5.3'
#      - name: Flutter Pub Get
#        run: flutter pub get
#      - name: Flutter Pub Test
#        run: flutter test
#      - name: Make APK
#        run: flutter build apk --release
#      - name: Make testfairy executable
#        run: chmod +x ./testfairy-uploader.sh
#      - name: Moving APK to TestFairy
#        run: ./testfairy-uploader.sh build/app/outputs/flutter-apk/app-release.apk ${{ secrets.TESTFAIRY_API_KEY }}

  fastlane-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x
      - name: Install Dependencies
        run: |
          cd android
          gem install bundler && bundle install
      - name: Make gradlew executable
        run: |
          chmod +x /home/runner/work/flutter_cicd/flutter_cicd/android/gradlew
          chmod +x /home/runner/.gradle/wrapper/dists/gradle-6.7-all/cuy9mc7upwgwgeb72wkcrupxe/gradle-6.7/bin/gradle
      - name: Run Fastlane Assemble Lane
        run: |
          cd android
          fastlane assemble

#  github-action-ios:
#    runs-on: macos-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Flutter Action
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '2.5.3'
#      - name: Flutter Pub Get
#        run: flutter pub get
#      - name: Flutter Pub Test
#        run: flutter test
#      - name: Build IOS
#        run: |
#          flutter build ios --release --no-codesign
#          cd build/ios/iphoneos
#          mkdir Payload
#          cd Payload
#          ln -s /Users/runner/work/flutter_cicd/flutter_cicd/build/ios/iphoneos/Runner.app
#          cd ..
#          zip -r app.ipa Payload
#          echo pwd
#          ls
#          cd ../../..
#      - name: Make testfairy executable
#        run: chmod +x ./testfairy-uploader.sh
#      - name: Moving IPA to TestFairy
#        shell: bash
#        run:  ./testfairy-uploader.sh build/ios/iphoneos/app.ipa "$testfairy_key"
#        env:
#          testfairy_key: ${{ secrets.TESTFAIRY_API_KEY }}